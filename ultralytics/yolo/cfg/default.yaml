# Ultralytics YOLO 🚀, AGPL-3.0 license
# Default training settings and hyperparameters for medium-augmentation COCO training

task: detect  # (str) YOLO任务, i.e. detect, segment, classify, pose
mode: train  # (str) YOLO模式, i.e. train, val, predict, export, track, benchmark

# Train settings -------------------------------------------------------------------------------------------------------
model: yolov8s-helmet.yaml # (str, optional) 模型文件的路径, i.e. yolov8n.pt, yolov8n.yaml
data: shel5kv4.yaml # (str, optional) 数据文件的路径, i.e. coco128.yaml
epochs: 20  # (int) 训练迭代次数
patience: 50  # (int) early stopping, 多少个epoch内模型性能不提升则停止训练
batch: 16  # (int) 每批图片数量 (-1 为自动确定)
imgsz: 640  # (int | list) 输入图片大小,训练和验证为int,预测和导出为list[w,h]
save: True  # (bool) 是否保存检查点和预测结果
save_period: -1 # (int) 保存检查点的周期,小于1则关闭
cache: False  # (bool) True/ram, disk or False. 使用缓存加速数据加载
device:  # (int | str | list, optional) 运行设备, i.e. cuda device=0 or device=0,1,2,3 or device=cpu
workers: 8  # (int) 数据加载的线程数 (分布式训练时每个进程内的线程数)
project:  # (str, optional) 项目名称
name:  # (str, optional) 实验名称,结果保存在 'project/name' 目录
exist_ok: False  # (bool) 是否覆盖已有的实验
pretrained: True  # (bool | str) 是否使用预训练模型 (bool) 或 指定某模型初始化权重 (str)
optimizer: auto  # (str) 优化器, choices=[SGD, Adam, Adamax, AdamW, NAdam, RAdam, RMSProp, auto]
verbose: True  # (bool) 是否输出详细信息
seed: 0  # (int) 随机种子,用以复现结果
deterministic: True  # (bool)是否允许 deterministic mode(作用是消除训练过程中的随机性和不确定性,使每次运行结果一致可重现)
single_cls: False  # (bool) 训练多分类数据作为单分类
rect: False  # (bool) 矩形框训练/验证，根据mode='train' or  mode='val'决定是训练还是验证，开启后只预测矩形框而不预测旋转框
cos_lr: False  # (bool) 使用cos学习率
close_mosaic: 10  # (int)最后几个epoch不启用mosaic增强
resume: False  # (bool) 从上次检查点恢复训练
amp: True  # (bool) 使用自动混合精度 (AMP) 训练, choices=[True, False], True runs AMP check
fraction: 1.0  # (float) 训练时使用数据集的比例 (default is 1.0, all images in train set)
profile: False  # (bool) 是否输出ONNX和TensorRT的推理时间 (供profiler使用)
# Segmentation(分割)
overlap_mask: True  # (bool) mask应该重叠 (仅分割训练)
mask_ratio: 4  # (int) mask下采样比例 (仅分割训练)
# Classification(分类)
dropout: 0.0  # (float) 使用dropout正则化 (仅分类训练)

# Val/Test settings ----------------------------------------------------------------------------------------------------
val: True  # (bool) 是否在训练时进行验证/测试
split: val  # (str) 用于验证的数据集, i.e. 'val', 'test' or 'train'
save_json: False  # (bool) 将结果保存到JSON文件
save_hybrid: False  # (bool) 保存混合的标签 (labels + additional predictions)
conf:  # (float, optional)检测置信度阈值 (default 0.25 predict, 0.001 val)
iou: 0.7  # (float) NMS的IoU阈值
max_det: 300  # (int) 每张图片的最大检测数量
half: False  # (bool) 使用半精度 Float16
dnn: False  # (bool) 使用OpenCV DNN进行ONNX推理
plots: True  # (bool) 训练/验证时保存图像

# Prediction settings --------------------------------------------------------------------------------------------------
source:  # (str, optional) 图片或视频的目录
show: False  # (bool) 如果可以的话显示预测结果
save_txt: False  # (bool) 将预测结果保存为.txt文件
save_conf: False  # (bool) 保存带置信度的预测结果
save_crop: False  # (bool) 保存预测结果的裁剪图像
show_labels: True  # (bool) 绘制时显示对象的标签
show_conf: True  # (bool) 绘制时显示对象的置信度
vid_stride: 1  # (int) 视频帧率步长
line_width:   # (int, optional) 边界框线宽,缺省则自动
visualize: False  # (bool) 可视化模型特征图
augment: False  # (bool) 对预测数据进行图像增强
agnostic_nms: False  # (bool) class-agnostic NMS: 进行类域非最大值抑制,即忽略类别信息,根据重叠度直接抑制检测框
classes:  # (int | list[int], optional) 只显示特定的类, i.e. class=0, or class=[0,2,3]
retina_masks: False  # (bool) 使用高分辨率的分割掩(segmentation masks)
boxes: True  # (bool) 在分割结果中显示边界框

# Export settings ------------------------------------------------------------------------------------------------------
format: torchscript  # (str)导出格式, choices at https://docs.ultralytics.com/modes/export/#export-formats
keras: False  # (bool) 使用 Keras
optimize: False  # (bool) TorchScript: 优化移动端
int8: False  # (bool) CoreML/TF INT8 量化
dynamic: False  # (bool) ONNX/TF/TensorRT: dynamic axes
simplify: False  # (bool) ONNX: 简化模型
opset:  # (int, optional) ONNX: opset 版本
workspace: 4  # (int) TensorRT: workspace size (GB)
nms: False  # (bool) CoreML: 添加NMS

# Hyperparameters ------------------------------------------------------------------------------------------------------
lr0: 0.01  # (float) 初始学习率 (i.e. SGD=1E-2, Adam=1E-3)
lrf: 0.01  # (float) 最终学习率  (lr0 * lrf)
momentum: 0.937  # (float) SGD动量/Adam beta1
weight_decay: 0.0005  # (float) optimizer 权重衰减 5e-4
warmup_epochs: 3.0  # (float) 热身周期数 (fractions ok)
warmup_momentum: 0.8  # (float) 热身初始动量(momentum)
warmup_bias_lr: 0.1  # (float) 热身初始偏置学习率
box: 7.5  # (float) 边界框loss权重
cls: 0.5  # (float) 分类loss权重 (与像素挂钩)
dfl: 1.5  # (float)dfl loss权重
pose: 12.0  # (float) 姿态估计loss权重
kobj: 1.0  # (float) keypoint obj loss权重
label_smoothing: 0.0  # (float) 标签平滑 (比例)
nbs: 64  # (int) 名义批量大小：模型会以此为基准调整实际 batch size 的学习率
hsv_h: 0.015  # (float) 图像HSV-Hue增强比例
hsv_s: 0.7  # (float) 图像HSV-Saturation增强比例
hsv_v: 0.4  # (float) 图像HSV-Value增强比例
degrees: 0.0  # (float) 图像旋转角度 (+/- deg)
translate: 0.1  # (float) 图像平移比例 (+/- fraction)
scale: 0.5  # (float)  图像缩放比例 (+/- gain)
shear: 0.0  # (float) 图像错切角度 (+/- deg)
perspective: 0.0  # (float) 图像透视变换比例 (+/- fraction), range 0-0.001
flipud: 0.0  # (float) 图像上下翻转概率
fliplr: 0.5  # (float) 图像左右翻转概率
mosaic: 1.0  # (float) 图像mosaic概率
mixup: 0.0  # (float) 图像mixup概率
copy_paste: 0.0  # (float)分割copy-paste概率

# Custom config.yaml ---------------------------------------------------------------------------------------------------
cfg:  # (str, optional) 覆盖 defaults.yaml

# Debug, do not modify -------------------------------------------------------------------------------------------------
v5loader: False  # (bool) 使用传统的YOLOv5 dataloader (不推荐)

# Tracker settings ------------------------------------------------------------------------------------------------------
tracker: botsort.yaml  # (str) 跟踪器类型, choices=[botsort.yaml, bytetrack.yaml]
